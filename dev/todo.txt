Backup Scripter

Todo
---
Legend

NSS: nssgui
BS: BackupScripter
SL: scriptlib (still a part of BackupScripter, BS may include SL)

- Normal
* Important
---

QoL, Settings
- BS: add default locations for main page file browsing
- BS: consider settings for editor, particularly default browse locations
	- settings screen?

Bugs, Poorly Implemented
- BS: selecting in vfs explorer resets scroll
- NSS: make units dropdown from InputUnits ordered correctly
- NSS: InfoButton and Info is messy
* BS: Check behavior of scripts where static inclusion has mismatch at script runtime, i.e. something specified as included/excluded
does not exist. This should be reported during script execution. Also when loading a script or loading defaults.
- BS: Dynamically excluded roots don't get counted toward excluded in reports like the manage-included frame

Incomplete
* BS: Needs to be fully tested on a second Windows environment, including a clean install
- NSS/BS: Needs to be tested on Linux
- NSS/BS: Needs to be tested on Mac
* NSS/BS: Installation process incomplete, requirements etc must be finished
- NSS/BS: Proper library version control for nssgui not acheived. nssgui should be able to be independently updated alongside BackupScripter, with an otherwise useable version available elsewhere. Git branches should achieve much of this. There is then the question of where the version number is maintained, and how it is changed with pulls and commits from branched development.

Unimplemented
- BS: Add 'Run Script' then 'Run Once', for a one-time packaging
- NSS: A ToolBar class would be nice
- BS: Implement compression settings
- BS: in assert_files_match_zip in test_core.py, implement compare_contents
- BS: in script/details.py add (# days old) text to backup-to-be-overwritten segment
- BS: in script/app.py add option to edit scripts with editor
- BS: in scriptlib/.../script_data.py:ScriptData:verify_file_is_script(), make a more through check, perhaps by inserting data into the pyz
- NSS: Increase performance by making a lazy init function in gem, as in gem.layout(class, *args, *kwargs) that calls init IF first call
- BS: add relative paths (might have to be explicit)
- BS: add matching option for age of file
- BS: should there be a way to see the include>exclude>include>... structure in vfs explorer?

Design, Behavior, Error Prevention
- NSS: Should be able to override incoming status bar messages (by pruning the time-event queue)
- NSS: The functions for updating ge's seems messy and inconsistent
- NSS: save/load/push/pull shouldn't use _func as their inner-abstract naming convention
- BS: The default matching groups are automatically processed upon program start, which affects loading time. Something should be done about this.
- NSS/BS: improve consistency with 'folder' vs 'dir'
- BS: pulling date from files only works if no periods in file name or date string, enforce this with GUI
- NSS: making the edit window for ListContainer was messy and poorly documented. This needs to be easier to understand.
- SL: how do changes to code affect backwards compatibility with existing pyz scripts? how to prevent the functions from breaking when accessing pyz script generated from older code?
- NSS: folder browse button for StringContainer/TextList is currently a part of StringContainer (in the init), shouldn't it be a part of TextList instead?
- NSS: are asyncwindows disabled from context.disable()?
- NSS: gem.row/etc should be self.row in window classes. Maybe use a iGEManager interface for passing gem as param as well?
- NSS/BS: Error prevention needed. Try unintended actions to see what happens, and fix.
- NSS: currently every element saves data, shouldn't there be an option, especially for output elements?
- BS: Add color to vfs explorer for included/excluded (very pale red/green)
- NSS: add multiple handler binding to EventManager/EventLoop (one event -> multiple handlers)
- BS: get rid of app.py

Tests
- BS: Make test for 2+ roots included with identical names (after first, should be renamed with _2, _3, ... appended)

Documentation
- BS: clean and document project/create.py
- NSS/BS: convert above-function comments to docstrings so that they can be seen in ide
- NSS/BS: look over and update existing documentation
- BS: update FSDef in test_core.py with correct documentation of TestFile and TestDir

Inclusion Matching
- BS: Implement Inclusion Matching
- BS: Does including with pattern matching include appropriate parent folders
- BS: Should inclusion require a 'within path' ?

Project Organization, Version Control
- NSS: vfs explorer view is still somewhat project specific
- NSS: move EmbedText from nssgui.sg.utils to somewhere better
